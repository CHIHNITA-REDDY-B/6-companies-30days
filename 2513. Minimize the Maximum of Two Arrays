import math

class Solution:
    def minimizeSet(self, divisor_1: int, divisor_2: int, unique_count_1: int, unique_count_2: int) -> int:
        
        def gcd(a, b):
            if a == 0:
                return b

            if b == 0:
                return a

            if a == b:
                return a

            if a > b:
                return gcd(a - b, b)
            return gcd(a, b - a)
        
        def lcm(a, b):
            return a * b // gcd(a, b)
            
        d1 = divisor_1
        d2 = divisor_2
        u1 = unique_count_1
        u2 = unique_count_2
        
        left = 1
        right = 10 ** 10
        result = float('inf')
        
        while left <= right:
            middle = (left + right) // 2
            x = middle - middle // d1
            y = middle - middle // d2
            z = middle - middle // lcm(d1, d2)
            
            if x < u1 or y < u2 or z < u1 + u2:
                left = middle + 1
                continue
            else:
                result = min(result, middle)
                right = middle - 1       
                
        return result
